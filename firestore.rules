rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Rules for user profiles
    match /users/{userId} {
      // A user can create their own profile document.
      allow create: if request.auth.uid == userId;
      
      // A user can read their own profile. An admin can read any profile.
      allow read: if request.auth.uid == userId 
                  || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.status == 'approved';
                  
      // A user can update their own profile. An admin can update any profile.
      allow update: if request.auth.uid == userId 
                    || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.status == 'approved';

      // An admin can list all user profiles.
      allow list: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.status == 'approved';
    }

    // Rules for projects
    match /projects/{projectId} {
      // Any authenticated user can create a project (they become the owner/admin).
      allow create: if request.auth != null;

      // A user can read a project if their email is in the participant list.
      allow read: if request.auth.token.email in resource.data.participantsEmails;

      // A project's admin can update or delete the project.
      allow update, delete: if request.auth.token.email in resource.data.participants.filter(p => p.role == 'admin').map(p => p.email);
    }
  }
}
