
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- USERS COLLECTION RULES ---
    match /users/{userId} {
      // Any authenticated user can create their own document.
      allow create: if request.auth.uid == userId;

      // A user can read and update their own document.
      allow get, update: if request.auth.uid == userId;
      
      // The ADMIN can list, get, and update any user document.
      // This rule explicitly grants the necessary permissions.
      allow list, get, update: if request.auth.token.email == 'alexispparra@gmail.com';
    }

    // --- PROJECTS COLLECTION RULES ---
    match /projects/{projectId} {
      // Any authenticated user can create a project. The app logic handles ownership.
      allow create: if request.auth != null;

      // A user can read a project only if they are listed in participantsEmails.
      // The 'list' permission works because the app query filters by this same field.
      allow get, list: if request.auth.token.email in resource.data.participantsEmails;

      // A user can update or delete a project only if they are listed in participantsEmails.
      // The UI is responsible for hiding buttons for "viewer" roles.
      allow update, delete: if request.auth.token.email in resource.data.participantsEmails;
    }
  }
}
